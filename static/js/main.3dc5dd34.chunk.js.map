{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/usedStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFireStore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","useFirestore","console","log","className","map","motion","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","intital","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAcEA,IAASC,cATW,CAClBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAiBR,IAASS,UAC1BC,EAAmBV,IAASW,YAC5BC,EAAYZ,IAASW,UAAUE,WAAWC,gBCMnCC,EArBM,SAACC,GAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,qBAAU,WACN,IAAMC,EAAQX,EAAiBM,WAAWA,GACrCM,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACT,IAAIC,EAAY,GAChBD,EAAKE,SAAQ,SAAAC,GACTF,EAAUG,KAAV,2BAAmBD,EAAIE,QAAvB,IAA+BC,GAAIH,EAAIG,KAC1C,IACDX,EAAQM,EACX,IAEL,OAAO,kBAAMJ,GAAN,CACV,GAAE,CAACL,IAGG,CAAEE,OACZ,E,QCKca,EAvBG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAERd,EAASe,EAAa,UAAtBf,KAGR,OAFAgB,QAAQC,IAAIjB,GAGR,yBAAKkB,UAAU,YACTlB,GAAQA,EAAKmB,KAAI,SAAAV,GAAG,OAClB,kBAACW,EAAA,EAAOC,IAAR,CAAYH,UAAU,WAAWI,IAAKb,EAAIG,GACtCW,QAAM,EACNC,WAAY,CAACC,QAAS,GACtBC,QAAS,kBAAMZ,EAAeL,EAAIkB,IAAzB,GACT,kBAACP,EAAA,EAAOQ,IAAR,CAAYC,IAAKpB,EAAIkB,IAAKG,IAAI,WAC1BC,QAAS,CAACN,QAAS,GACnBO,QAAS,CAACP,QAAS,GACnBQ,WAAY,CAACC,MAAO,MARV,IAcjC,ECDcC,EArBD,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,YAAatB,EAAoB,EAApBA,eAQzB,OACI,kBAACM,EAAA,EAAOC,IAAR,CAAYH,UAAU,WAAWQ,QAPjB,SAACW,GACbA,EAAEC,OAAOC,UAAUC,SAAS,aAC5B1B,EAAe,KAGtB,EAGOiB,QAAS,CAACN,QAAS,GACnBO,QAAS,CAACP,QAAS,IAEnB,kBAACL,EAAA,EAAOQ,IAAR,CAAYC,IAAKO,EAAaN,IAAI,cAC9BC,QAAS,CAACU,EAAG,UACbT,QAAS,CAACS,EAAG,KAI5B,ECVcC,EAVD,WACZ,OACE,yBAAKxB,UAAU,SACb,wCACA,6CACA,uCAGL,E,yBCqBcyB,EA5BI,SAACC,GAChB,MAAgC7C,mBAAS,GAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAA0B/C,mBAAS,MAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KACA,EAAsBjD,mBAAS,MAA/B,mBAAO4B,EAAP,KAAYsB,EAAZ,KAsBA,OApBA/C,qBAAU,WAEN,IAAMgD,EAAa5D,EAAe6D,IAAIP,EAAKQ,MACrCC,EAAgB7D,EAAiBM,WAAW,UAElDoD,EAAWI,IAAIV,GAAMW,GAAG,iBAAiB,SAACjD,GAEtC,IAAIkD,EAAclD,EAAKmD,iBAAmBnD,EAAKoD,WAAc,IAC7DZ,EAAYU,EACf,IAAE,SAACG,GACAX,EAASW,EACZ,GAND,sBAMG,8BAAAC,EAAA,sEACmBV,EAAWW,iBAD9B,OACOlC,EADP,OAEOmC,EAAYpE,IAClB2D,EAAcU,IAAI,CAAEpC,MAAKmC,cACzBb,EAAOtB,GAJR,2CAON,GAAE,CAACiB,IAEG,CAAEC,WAAUlB,MAAKoB,QAC3B,ECRciB,EAjBK,SAAC,GAAqB,IAApBpB,EAAmB,EAAnBA,KAAMqB,EAAa,EAAbA,QACxB,EAAwBtB,EAAWC,GAA5BjB,EAAP,EAAOA,IAAKkB,EAAZ,EAAYA,SAQZ,OANA3C,qBAAU,WACFyB,GACAsC,EAAQ,KAEf,GAAE,CAACtC,EAAKsC,IAGL,kBAAC7C,EAAA,EAAOC,IAAR,CAAYH,UAAU,cAClBgD,QAAS,CAACC,MAAO,GACjBnC,QAAS,CAACmC,MAAOtB,EAAW,MAGvC,ECkBcuB,EAlCI,WAEf,MAAwBrE,mBAAS,MAAjC,mBAAO6C,EAAP,KAAaqB,EAAb,KACA,EAA0BlE,mBAAS,MAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KAEMqB,EAAQ,CAAC,YAAa,cAiB5B,OACI,8BACI,2BAAOC,KAAK,OAAOC,SAjBL,SAAClC,GACnB,IAAImC,EAAWnC,EAAEC,OAAOmC,MAAM,GAC9BR,EAAQO,GAES,OAAbA,GAAqBH,EAAMK,SAASF,EAASF,OAC3CL,EAAQO,GACRxB,EAAS,MAIPiB,EAAQ,MACRjB,EAAS,+BAEpB,IAKO,yBAAK9B,UAAU,UACV6B,GAAS,yBAAK7B,UAAU,SAAf,IAAyB6B,EAAzB,KACTH,GAAQ,iCAAOA,EAAKQ,KAAZ,KACRR,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAMqB,QAASA,KAI1D,ECfcU,MAdf,WAEE,MAAsC5E,mBAAS,MAA/C,mBAAOqC,EAAP,KAAoBtB,EAApB,KAEA,OACE,yBAAKI,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWJ,eAAgBA,IACzBsB,GAAe,kBAAC,EAAD,CAAOA,YAAaA,EAAatB,eAAgBA,IAGvE,ECbD8D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,Q","file":"static/js/main.3dc5dd34.chunk.js","sourcesContent":[" import firebase from 'firebase/app';\r\n import 'firebase/storage';\r\n import 'firebase/firestore';\r\n \r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyCl63zqMcojY4h7wdZJt-1AM6vPx0HW6Fk\",\r\n    authDomain: \"photogram-dd2e8.firebaseapp.com\",\r\n    projectId: \"photogram-dd2e8\",\r\n    storageBucket: \"photogram-dd2e8.appspot.com\",\r\n    messagingSenderId: \"220032081654\",\r\n    appId: \"1:220032081654:web:83abd095cac32d28f616d7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export { projectStorage, projectFirestore, timestamp};","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => { \r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id})\r\n                });\r\n                setDocs(documents);\r\n            })\r\n\r\n        return () => unsub();\r\n    }, [collection])\r\n\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFireStore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n\r\n    const { docs } = useFirestore('images')\r\n    console.log(docs)\r\n\r\n    return (\r\n        <div className='img-grid'>\r\n            { docs && docs.map(doc => (\r\n                <motion.div className='img-wrap' key={doc.id} \r\n                    layout\r\n                    whileHover={{opacity: 1}}\r\n                    onClick={() => setSelectedImg(doc.url)}>\r\n                    <motion.img src={doc.url} alt='pictures'\r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        transition={{delay: 0.8}}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1}}\r\n            >\r\n            <motion.img src={selectedImg} alt='highlighted' \r\n                initial={{y: \"-100vh\"}}\r\n                animate={{y: 0}}\r\n                />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>Pictures</h1>\r\n      <h2>Your Pictures</h2>\r\n      <p>user bio</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title;","import { useState, useEffect } from \"react\";\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err)\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url, createdAt })\r\n            setUrl(url)\r\n        })\r\n\r\n    }, [file]);\r\n\r\n    return { progress, url, error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/usedStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file)\r\n    \r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null)\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progressbar\" \r\n            intital={{width: 0}}\r\n            animate={{width: progress + '%'}}\r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar; ","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const types = ['image/png', 'image/jpeg']\r\n\r\n    const uploadHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n        setFile(selected);\r\n\r\n        if (selected !== null && types.includes(selected.type))\r\n            { setFile(selected)\r\n              setError('')\r\n            }\r\n        else\r\n            { \r\n                setFile(null);\r\n                setError('Please upload an image file')\r\n            }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input type='file' onChange={uploadHandler}/>\r\n            <div className='output'>\r\n                {error && <div className='error'> {error} </div>}\r\n                {file && <div> {file.name} </div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import React, {useState} from 'react';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\nimport Title from './comps/Title';\r\nimport UploadForm from './comps/UploadForm';\r\n\r\nfunction App() {\r\n\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title/>\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg}/>\r\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}